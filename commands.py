import json

import autogreeting

from gendiscbot import discmess

def commands(self, post):
    if not post['pingDiscBot']:
        return
    
    with open('languages/{}.json'.format(self.myBot.getWikiLang()), 'r') as file:
        dataReplyPost = json.loads(file.read())
    
    if 'ping' in post['content'].lower():
        replyPostCommand = discmess.DiscussionsMessage()
        
        replyPostCommand.addText(post['user'], strong=True).addText(', –ø—Ä–∏–≤–µ—Ç! –Ø, ').addText(self.myBot.getBotUserName(), strong=True)
        replyPostCommand.addText(', ‚Äì –±–æ—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å –Ω—É–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ó—É–±–µ–Ω–∫–æ –ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤–∏—á. –ï—Å–ª–∏ —É —Ç–µ–±—è –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –ª—É—á—à–µ –æ–±—Ä–∞—â–∞–π—Å—è –∫ –Ω–µ–º—É. –î–µ—Ä–∂–∏ –¥–∞–∂–µ ')
        replyPostCommand.addText('—Å—Å—ã–ª–∫—É', link='https://warriors-cats.fandom.com/ru/wiki/–°—Ç–µ–Ω–∞_–æ–±—Å—É–∂–¥–µ–Ω–∏—è:–ó—É–±–µ–Ω–∫–æ_–ú–∏—Ö–∞–∏–ª_–ü–µ—Ç—Ä–æ–≤–∏—á').addText('. –ú–Ω–µ –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —Å–º—ã—Å–ª–∞ –ø–∏—Å–∞—Ç—å, —è –Ω–µ –æ–±–ª–∞–¥–∞—é –¥–∞–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç Chat GPT üèì')

        self.myBot.createReplyMessageWall(
            replyPostCommand,
            threadID=post['threadID'],
            userID=self.myBot.getBotUserID()
        )

        return
    
    if 'update autotitle' in post['content'].lower():
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

        newTitle = post['content'].split('update autotitle ')[1]

        with open('configs/autogreeting.json', 'r') as file:
            dataAutogreeting = json.loads(file.read())
        
        with open('configs/autogreeting.json', 'w') as file:
            dataAutogreeting['title'] = newTitle
            file.write(json.dumps(dataAutogreeting))

        replyPostCommand = discmess.DiscussionsMessage()
        replyPostCommand.addText(dataReplyPost['UPDATE AUTOTITLE'].replace('$USERNAME', post['user']).replace('$TITLE', newTitle))

        self.myBot.createReplyMessageWall(
            replyPostCommand,
            threadID=post['threadID'],
            userID=self.myBot.getBotUserID()
        )

        return
    
    if 'update autopost' in post['content'].lower():
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

        with open('configs/autogreeting.json', 'r') as file:
            dataAutogreeting = json.loads(file.read())

        with open('configs/autogreeting.json', 'w') as file:
            # –Ω—É–∂–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å `jsonModel`, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –Ω–µ–º –ø–µ—Ä–≤—ã–π `paragraph` –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ `update autopost`
            jsonModel = json.loads(post['jsonModel'])
            jsonModel['content'].pop(0)

            dataAutogreeting['rawContent'] = post['content'].split('update autopost ')[1]
            dataAutogreeting['jsonModel'] = jsonModel
            dataAutogreeting['attachments'] = post['attachments']

            print(dataAutogreeting, '\n\n\n', dataAutogreeting['jsonModel'])

            file.write(json.dumps(dataAutogreeting))
        
        replyPostCommand = discmess.DiscussionsMessage()
        replyPostCommand.addText(dataReplyPost['UPDATE AUTOPOST'].replace('$USERNAME', post['user']))

        self.myBot.createReplyMessageWall(
            replyPostCommand,
            threadID=post['threadID'],
            userID=self.myBot.getBotUserID()
        )

        return
