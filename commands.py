import re
import json

import autogreeting

from datetime import datetime

from gendiscbot import discmess

def commands(self, post):
    normalContent = re.sub(r'\s+', ' ', post['content'].strip()) # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—Ä–æ–±–µ–ª—ã

    pattern = fr'@?{re.escape(self.myBot.getBotUserName())}\s?,\s?(.*)'
    match = re.match(pattern, normalContent) # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–º—è –±–æ—Ç–∞ –∏ –∫–æ–º–∞–Ω–¥—É

    if not match:
        # –∏–º—è –±–æ—Ç–∞ –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç, –Ω–µ—Ç –∏ –∫–æ–º–∞–Ω–¥—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return
    
    fullCommand = match.group(1) # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É (—Å–º. –ø–∞—Ç—Ç–µ—Ä–Ω)
    
    with open('languages/{}.json'.format(self.myBot.getWikiLang()), 'r') as file:
        dataReplyPost = json.loads(file.read())
    
    lowerFullCommand = fullCommand.lower()
    replyPostCommand = discmess.DiscussionsMessage()

    if 'ping' in lowerFullCommand or 'pong' in lowerFullCommand:
        ping(self, post, replyPostCommand, dataReplyPost)
    
    elif 'autogreeting on' in lowerFullCommand or 'autogreeting enable' in lowerFullCommand:
        autogreetingEnable(self, post, replyPostCommand, dataReplyPost)
    
    elif 'autogreeting off' in lowerFullCommand or 'autogreeting disable' in lowerFullCommand:
        autogreetingDisable(self, post, replyPostCommand, dataReplyPost)
    
    elif 'autogreeting title' in lowerFullCommand:
        autogreetingTitle(self, post, fullCommand, replyPostCommand, dataReplyPost)
    
    elif 'autogreeting message' in lowerFullCommand:
        pass
    
    elif 'report on' in lowerFullCommand or 'report enable' in lowerFullCommand:
        pass
    
    elif 'report off' in lowerFullCommand or 'report disable' in lowerFullCommand:
        pass
    
    elif 'warn add' in lowerFullCommand:
        warnAdd(self, post, fullCommand, replyPostCommand, dataReplyPost)
    
    elif 'warn list' in lowerFullCommand:
        warnList(self, post, fullCommand, replyPostCommand, dataReplyPost)
    
    elif 'warn delete' in lowerFullCommand:
        pass
    
    elif 'random' in lowerFullCommand:
        pass
    
    else:
        # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        return
    
    self.myBot.createReplyMessageWall(
        replyPostCommand,
        threadID=post['threadID'],
        userID=self.myBot.getBotUserID()
    )
    
    if 'update autopost' in post['content'].lower():
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

        with open('configs/autogreeting.json', 'r') as file:
            dataAutogreeting = json.loads(file.read())

        with open('configs/autogreeting.json', 'w') as file:
            # –Ω—É–∂–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å `jsonModel`, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –Ω–µ–º –ø–µ—Ä–≤—ã–π `paragraph` –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ `update autopost`
            jsonModel = json.loads(post['jsonModel'])
            jsonModel['content'].pop(0)

            dataAutogreeting['rawContent'] = post['content'].split('update autopost ')[1]
            dataAutogreeting['jsonModel'] = jsonModel
            dataAutogreeting['attachments'] = post['attachments']

            print(dataAutogreeting, '\n\n\n', dataAutogreeting['jsonModel'])

            file.write(json.dumps(dataAutogreeting))
        
        replyPostCommand = discmess.DiscussionsMessage()
        replyPostCommand.addText(dataReplyPost['UPDATE AUTOPOST'].replace('$USERNAME', post['user']))

        self.myBot.createReplyMessageWall(
            replyPostCommand,
            threadID=post['threadID'],
            userID=self.myBot.getBotUserID()
        )

        return

def ping(self, post, replyPostCommand, dataReplyPost):        
    replyPostCommand.addText(post['user'], strong=True).addText(', –ø—Ä–∏–≤–µ—Ç! –Ø, ').addText(self.myBot.getBotUserName(), strong=True)
    replyPostCommand.addText(', ‚Äì –±–æ—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å –Ω—É–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ó—É–±–µ–Ω–∫–æ –ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤–∏—á. –ï—Å–ª–∏ —É —Ç–µ–±—è –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –ª—É—á—à–µ –æ–±—Ä–∞—â–∞–π—Å—è –∫ –Ω–µ–º—É. –î–µ—Ä–∂–∏ –¥–∞–∂–µ ')
    replyPostCommand.addText('—Å—Å—ã–ª–∫—É', link='https://warriors-cats.fandom.com/ru/wiki/–°—Ç–µ–Ω–∞_–æ–±—Å—É–∂–¥–µ–Ω–∏—è:–ó—É–±–µ–Ω–∫–æ_–ú–∏—Ö–∞–∏–ª_–ü–µ—Ç—Ä–æ–≤–∏—á').addText('. –ú–Ω–µ –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —Å–º—ã—Å–ª–∞ –ø–∏—Å–∞—Ç—å, —è –Ω–µ –æ–±–ª–∞–¥–∞—é –¥–∞–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç Chat GPT üèì')

def autogreetingEnable(self, post, replyPostCommand, dataReplyPost):
    with open('configs/autogreeting.json', 'r') as file:
        dataAutogreeting = json.loads(file.read())
        
    with open('configs/autogreeting.json', 'w') as file:
        dataAutogreeting['status'] = True
        dataAutogreeting = json.loads(file.read())
    
    replyPostCommand.addText(post['user'], strong=True).addText(', –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã ‚úÖ')
    replyPostCommand.addParagraph('–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–µ–µ, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:')
    replyPostCommand.addBulletList('autogreeting title: [–Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫]', strong=True).addText(' ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫')
    replyPostCommand.addListItem('autogreeting message: [–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ]', strong=True).addText(' ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è')

    replyPostCommand.addParagraph('üìå –í —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:')
    replyPostCommand.addBulletList('$USERNAME', strong=True).addText(' ‚Äî –∏–º—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    replyPostCommand.addListItem('$WIKINAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –≤–∏–∫–∏')
    replyPostCommand.addListItem('$PAGENAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ —Ç–µ–º—ã, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–æ—è–≤–∏–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')

    replyPostCommand.addParagraph('üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:')
    replyPostCommand.addParagraph('–ó–∞–≥–æ–ª–æ–≤–æ–∫:', strong=True).addText(dataAutogreeting['title'])
    replyPostCommand.addParagraph('–°–æ–æ–±—â–µ–Ω–∏–µ:', strong=True).addText(dataAutogreeting['jsonModel'])

    replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
    replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))

def autogreetingDisable(self, post, replyPostCommand, dataReplyPost):
    with open('configs/autogreeting.json', 'r') as file:
        dataAutogreeting = json.loads(file.read())
        
    with open('configs/autogreeting.json', 'w') as file:
        dataAutogreeting['status'] = False
        dataAutogreeting = json.loads(file.read())
    
    replyPostCommand.addText(post['user'], strong=True).addText(', –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω–æ. –Ø –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∏—Ö –ø–µ—Ä–≤–æ–º –¥–µ–π—Å—Ç–≤–∏–∏. –ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')
    replyPostCommand.addText('autogreeting enable', strong=True).addText('.')

    replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
    replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))

def autogreetingTitle(self, post, fullCommand, replyPostCommand, dataReplyPost):
    newTitle = fullCommand[20:] # `autogreeting title: ` ‚Äì 20 —Å–∏–º–≤–æ–ª–æ–≤

    with open('configs/autogreeting.json', 'r') as file:
        dataAutogreeting = json.loads(file.read())
        
    with open('configs/autogreeting.json', 'w') as file:
        dataAutogreeting['title'] = newTitle
        file.write(json.dumps(dataAutogreeting))
    
    replyPostCommand.addText(post['user'], strong=True).addText(', –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω üéâ')
    replyPostCommand.addParagraph('–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–∞–º–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π: ')
    replyPostCommand.addText('autogreeting message: [–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ]', strong=True).addText('.')

    replyPostCommand.addParagraph('üìå –í —Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:')
    replyPostCommand.addBulletList('$USERNAME', strong=True).addText(' ‚Äî –∏–º—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
    replyPostCommand.addListItem('$WIKINAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –≤–∏–∫–∏')
    replyPostCommand.addListItem('$PAGENAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ —Ç–µ–º—ã, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–æ—è–≤–∏–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')

    replyPostCommand.addParagraph('üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:')
    replyPostCommand.addParagraph('–ó–∞–≥–æ–ª–æ–≤–æ–∫:', strong=True).addText(dataAutogreeting['title'])
    replyPostCommand.addParagraph('–°–æ–æ–±—â–µ–Ω–∏–µ:', strong=True).addText(dataAutogreeting['jsonModel'])

    replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
    replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))

def warnAdd(self, post, fullCommand, replyPostCommand, dataReplyPost):
    pattern = r'warn add\s?@?(.+?)(?:\s?:\s?)(.+)'
    match = re.match(pattern, fullCommand)

    if not match:
        # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        return
    
    username = match.group(1).replace('_', ' ') # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–º—è –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è (—Å–º. –ø–∞—Ç—Ç–µ—Ä–Ω)
    reason = match.group(2) # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –Ω–∞—Ä—É—à–µ–Ω–∏—è

    with open('configs/warns.json', 'r') as file:
        dataWarns = json.loads(file.read())
    
    if not username in dataWarns:
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∞ –µ—Å—Ç—å –ª–∏ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –≤–æ–æ–±—â–µ –Ω–∞ –≤–∏–∫–∏
        if not self.myBot.existsUserID(username):
            # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            return
        
        dataWarns[username] = []
    
    dataWarns[username].append({
        'moderator': post['user'],
        'reason': reason,
        'timestamp': datetime.strptime(post['timestamp'], '%d.%m.%Y %H:%M:%S')
    })

    replyPostCommand.addText(post['user'], strong=True).addText(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
    replyPostCommand.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
    replyPostCommand.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

    replyPostCommand.addParagraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
    replyPostCommand.addBulletList()

    for warn in dataWarns[username]:
        replyPostCommand.addListItem(dataWarns[username]['timestamp'] + ' –æ—Ç ' + dataWarns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + dataWarns[username]['reason'])

    replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
    replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))

def warnList(self, post, fullCommand, replyPostCommand, dataReplyPost):
    pattern = r'warn list\s?@?(.+)'
    match = re.match(pattern, fullCommand)

    if not match:
        # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        return
    
    username = match.group(1).replace('_', ' ') # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–º—è –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è (—Å–º. –ø–∞—Ç—Ç–µ—Ä–Ω)

    with open('configs/warns.json', 'r') as file:
        dataWarns = json.loads(file.read())
    
    if not username in dataWarns:
        # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        return
    
    replyPostCommand.addText(post['user'], strong=True).addText(', —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –≤—ã–¥–∞–Ω–Ω—ã—Ö —ç—Ç–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É ‚ö†Ô∏è')
    replyPostCommand.addBulletList()

    for warn in dataWarns[username]:
        replyPostCommand.addListItem(dataWarns[username]['timestamp'] + ' –æ—Ç ' + dataWarns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + dataWarns[username]['reason'])

    replyPostCommand.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
    replyPostCommand.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

    replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
    replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))
