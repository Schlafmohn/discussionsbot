import re
import json

from typing import Optional
from datetime import datetime

from general import discbot, discmess

FILE_WARNS = 'configs/warns.json'

class WarnsHandler:
    def __init__(self, bot: discbot.DiscussionsBot):
        self.bot = bot

        self.commands_map = {
            'add': self._handle_add,
            '@': self._handle_add,
            'list': self._handle_list,
            'delete': self._handle_delete
        }
    
    def _handle_warn(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        if not ('sysop' in message['permission'] or 'threadmoderator' in message['permission']):
            return
        
        parts = message['full_command'].split(maxsplit=2)
        if len(parts) == 1:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        subcommand = parts[1].lower()
        for command, handler in self.commands_map.items():
            if subcommand.startswith(command):
                return handler(message, data_reply)
    
    def _handle_add(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        parts = message['full_command'].split('@', maxsplit=1)
        if len(parts) == 1:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username_with_reason = parts[1].strip()
        if username_with_reason == '':
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        parts = username_with_reason.split(':', maxsplit=1)
        username = parts[0].replace('_', ' ').strip()

        if len(parts) == 1:
            reason = '–±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã'
        else:
            reason = parts[1].strip()
        
        with open(FILE_WARNS, 'r') as file:
            data_warns = json.load(file)
        
        if not username in data_warns:
            if not self.bot.activity.get_user_id(username):
                return self._unknown_user(message, data_reply) # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
            
            data_warns[username] = []
        
        warn = {
            'moderator': message['user'],
            'reason': reason,
            'timestamp': message['timestamp'].strftime('%d.%m.%Y %H:%M:%S')
        }

        data_warns[username].append(warn)

        with open(FILE_WARNS, 'w') as file:
            json.dump(data_warns, file, indent=2)
        
        reply = discmess.DiscussionsMessage().add_paragraph()
        reply.add_text_to_last(message['user'], strong=True).add_text_to_last(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
        reply.add_paragraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.add_text_to_last('warn delete @username: 1 2', strong=True).add_text_to_last(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.add_paragraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
        # reply.addBulletList()

        # for warn in data_warns[username]:
        #     reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.add_paragraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').add_text_to_last('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.add_text_to_last('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot.core.botname))
        return reply

    def _handle_list(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        parts = message['full_command'].split('@', maxsplit=1)
        if len(parts) == 1:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = parts[1].strip()
        if username == '':
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        with open(FILE_WARNS, 'r') as file:
            data_warns = json.load(file)
        
        if not username in data_warns:
            return self._unknown_user(message, data_reply) # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫

        reply = discmess.DiscussionsMessage().add_paragraph()
        reply.add_text_to_last(message['user'], strong=True).add_text_to_last(', —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –≤—ã–¥–∞–Ω–Ω—ã—Ö —ç—Ç–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É ‚ö†Ô∏è')
        # reply.addBulletList()

        # for warn in data_warns[username]:
        #     reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.add_paragraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.add_text_to_last('warn delete @username: 1 2', strong=True).add_text_to_last(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.add_paragraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').add_text_to_last('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.add_text_to_last('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot.core.botname))
        return reply

    def _handle_delete(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        parts = message['full_command'].split('@', maxsplit=1)
        if len(parts) == 1:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username_with_numbers = parts[1].strip()
        if username_with_numbers == '':
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        parts = username_with_numbers.split(':', maxsplit=1)
        username = parts[0].replace('_', ' ').strip()

        with open(FILE_WARNS, 'r') as file:
            data_warns = json.load(file)
        
        if not username in data_warns:
            return self._unknown_user(message, data_reply) # –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
        
        if len(parts) == 1 or 'all' in parts[1]:
            data_warns[username] = []

        else:
            indexes_to_remove = [int(i) - 1 for i in re.findall(r'\d+', parts[1])]
            valid_indexes = [i for i in indexes_to_remove if 0 <= i < len(data_warns[username])]
            for i in sorted(valid_indexes, reverse=True):
                del data_warns[username][i]
        
        with open(FILE_WARNS, 'w') as file:
            json.dump(data_warns, file, indent=2)
        
        reply = discmess.DiscussionsMessage().add_paragraph()
        reply.add_text_to_last(message['user'], strong=True).add_text_to_last(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
        reply.add_paragraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.add_text_to_last('warn delete @username: 1 2', strong=True).add_text_to_last(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.add_paragraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
        # reply.addBulletList()

        # for warn in data_warns[username]:
        #     reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.add_paragraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').add_text_to_last('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.add_text_to_last('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot.core.botname))
        return reply

    def _unknown_user(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        reply = discmess.DiscussionsMessage().add_paragraph()
        reply.add_text_to_last(message['user'], strong=True).add_text_to_last(', –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º ‚ùó')
        reply.add_paragraph('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ –∏–º—è ‚Äî –æ–Ω–æ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–∏–∫–∏. –ï—Å–ª–∏ –∏–º—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø—Ä–æ–±–µ–ª—ã –∏–ª–∏ —Å–∏–º–≤–æ–ª @.')
        reply.add_paragraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').add_text_to_last('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.add_text_to_last('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot.core.botname))
        return reply
