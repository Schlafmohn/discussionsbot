import re
import json

from general import discbot
from general import activity
from general import moderation
from general import message

from datetime import datetime
from typing import Optional

class Commands:
    def __init__(self, bot: discbot.DiscussionsBot, activity: activity.DiscussionsActivity, moderation: moderation.DiscussionsModeration):
        self.bot = bot
        self.activity = activity
        self.moderation = moderation

        self.commands_map = {
            'ping': self._handle_ping,
            'pong': self._handle_ping,
            'autogreeting on': self._handle_autogreeting_enable,
            'autogreeting enable': self._handle_autogreeting_enable,
            'autogreeting off': self._handle_autogreeting_disable,
            'autogreeting disable': self._handle_autogreeting_disable,
            'autogreeting title': self._handle_autogreeting_title,
            'autogreeting message': self._handle_autogreeting_message,
            'report on': self._handle_report_enable,
            'report enable': self._handle_report_enable,
            'report off': self._handle_report_disable,
            'report disable': self._handle_report_disable,
            'warn add': self._handle_warn_add,
            'warn list': self._handle_warn_list,
            'warn delete': self._handle_warn_delete,
            'random': self._handle_random
        }
    
    def handle(self, message: message.DiscussionsMessage) -> bool:
        if not message['ping_bot']:
            return False
        
        with open('languages/{}.json'.format(self.bot._wikilang), 'r') as file:
            data_reply = json.load(file.read())
        
        reply = message.DiscussionsMessage()
        lower_command = message['full_command'].lower()

        for command, handler in self.commands_map.item():
            if lower_command.startswith(command):
                reply = handler(message, data_reply)
                break
        
        if not reply:
            return False
        
        match message['type']:
            case 'FORUM':
                self.moderation.create_reply_discussion(reply, message['thread_id'])
            
            case 'WALL':
                self.moderation.create_reply_message_wall(reply, message['thread_id'], user_id=message['user_id'])
            
            case 'ARTICLE_COMMENT':
                self.moderation.create_reply_article_comment(reply, message['thread_id'], self.activity._get_page_title(message['forum_id']))

        return True
    
    def _handle_ping(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        reply = message.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', –ø—Ä–∏–≤–µ—Ç! –Ø, ').addText(self.bot._botname, strong=True)
        reply.addText(', ‚Äì –±–æ—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å –Ω—É–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ó—É–±–µ–Ω–∫–æ –ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤–∏—á. –ï—Å–ª–∏ —É —Ç–µ–±—è –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –ª—É—á—à–µ –æ–±—Ä–∞—â–∞–π—Å—è –∫ –Ω–µ–º—É. –î–µ—Ä–∂–∏ –¥–∞–∂–µ ')
        reply.addText('—Å—Å—ã–ª–∫—É', link='https://warriors-cats.fandom.com/ru/wiki/–°—Ç–µ–Ω–∞_–æ–±—Å—É–∂–¥–µ–Ω–∏—è:–ó—É–±–µ–Ω–∫–æ_–ú–∏—Ö–∞–∏–ª_–ü–µ—Ç—Ä–æ–≤–∏—á')
        reply.addText('. –ú–Ω–µ –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —Å–º—ã—Å–ª–∞ –ø–∏—Å–∞—Ç—å, —è –Ω–µ –æ–±–ª–∞–¥–∞—é –¥–∞–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç Chat GPT üèì')
        
        return reply
    
    def _handle_autogreeting_enable(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        pass

    def _handle_autogreeting_disable(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        pass

    def _handle_autogreeting_title(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        pass

    def _handle_autogreeting_message(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        pass

    def _handle_report_enable(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        pass

    def _handle_report_disable(self, message: message.DiscussionsMessage, data_reply: dict) -> message.DiscussionsMessage:
        pass

    def _handle_warn_add(self, message: message.DiscussionsMessage, data_reply: dict) -> Optional[message.DiscussionsMessage]:
        pattern = r'warn add\s?@?(.+?)(?:\s?:\s?)(.+)'
        match = re.match(pattern, message['full_command'])

        if not match:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = match.group(1).replace('_', ' ')
        reason = match.group(2)

        with open('../configs/warns.json', 'r') as file:
            data_warns = json.loads(file)
        
        if not username in data_warns:
            if not self.activity.get_user_id(username):
                return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            data_warns[username] = []
        
        warn = {
            'moderator': message['user'],
            'reason': reason,
            'timestamp': datetime.strptime(message['timestamp'], '%d.%m.%Y %H:%M:%S')
        }

        reply = message.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
        reply.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.addParagraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
        reply.addBulletList()

        for warn in data_warns[username]:
            reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply
    
    def _handle_warn_list(self, message: message.DiscussionsMessage, data_reply: dict) -> Optional[message.DiscussionsMessage]:
        pattern = r'warn list\s?@?(.+)'
        match = re.match(pattern, message['full_command'])

        if not match:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = match.group(1).replace('_', ' ')

        with open('../configs/warns.json', 'r') as file:
            data_warns = json.loads(file)
        
        if not username in data_warns:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        reply = message.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –≤—ã–¥–∞–Ω–Ω—ã—Ö —ç—Ç–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É ‚ö†Ô∏è')
        reply.addBulletList()

        for warn in data_warns[username]:
            reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply
    
    def _handle_warn_delete(self, message: message.DiscussionsMessage, data_reply: dict) -> Optional[message.DiscussionsMessage]:
        pattern = r'warn add\s?@?(.+?)(?:\s?:\s?)(.+)'
        match = re.match(pattern, message['full_command'])

        if not match:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = match.group(1).replace('_', ' ')
        list_to_remove = match.group(1)

        with open('../configs/warns.json', 'r') as file:
            data_warns = json.loads(file)
        
        if not username in data_warns:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        if 'all' in list_to_remove:
            data_warns[username] = []
        else:
            indexes_to_remove = [int(i) - 1 for i in re.findall(r'\d+', list_to_remove)]
            valid_indexes = [i for i in indexes_to_remove if 0 <= i < len(data_warns)]

            for i in sorted(valid_indexes, reverse=True):
                del data_warns[i]
        
        reply = message.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
        reply.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.addParagraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
        reply.addBulletList()

        for warn in data_warns[username]:
            reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply


    

    
#     if 'update autopost' in post['content'].lower():
#         # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

#         with open('configs/autogreeting.json', 'r') as file:
#             dataAutogreeting = json.loads(file.read())

#         with open('configs/autogreeting.json', 'w') as file:
#             # –Ω—É–∂–Ω–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å `jsonModel`, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –Ω–µ–º –ø–µ—Ä–≤—ã–π `paragraph` –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ `update autopost`
#             jsonModel = json.loads(post['jsonModel'])
#             jsonModel['content'].pop(0)

#             dataAutogreeting['rawContent'] = post['content'].split('update autopost ')[1]
#             dataAutogreeting['jsonModel'] = jsonModel
#             dataAutogreeting['attachments'] = post['attachments']

#             print(dataAutogreeting, '\n\n\n', dataAutogreeting['jsonModel'])

#             file.write(json.dumps(dataAutogreeting))
        
#         replyPostCommand = discmess.DiscussionsMessage()
#         replyPostCommand.addText(dataReplyPost['UPDATE AUTOPOST'].replace('$USERNAME', post['user']))

#         self.myBot.createReplyMessageWall(
#             replyPostCommand,
#             threadID=post['threadID'],
#             userID=self.myBot.getBotUserID()
#         )

#         return


# def autogreetingEnable(self, post, replyPostCommand, dataReplyPost):
#     with open('configs/autogreeting.json', 'r') as file:
#         dataAutogreeting = json.loads(file.read())
        
#     with open('configs/autogreeting.json', 'w') as file:
#         dataAutogreeting['status'] = True
#         dataAutogreeting = json.loads(file.read())
    
#     replyPostCommand.addText(post['user'], strong=True).addText(', –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã ‚úÖ')
#     replyPostCommand.addParagraph('–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–µ–µ, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:')
#     replyPostCommand.addBulletList('autogreeting title: [–Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫]', strong=True).addText(' ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫')
#     replyPostCommand.addListItem('autogreeting message: [–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ]', strong=True).addText(' ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è')

#     replyPostCommand.addParagraph('üìå –í —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:')
#     replyPostCommand.addBulletList('$USERNAME', strong=True).addText(' ‚Äî –∏–º—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
#     replyPostCommand.addListItem('$WIKINAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –≤–∏–∫–∏')
#     replyPostCommand.addListItem('$PAGENAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ —Ç–µ–º—ã, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–æ—è–≤–∏–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')

#     replyPostCommand.addParagraph('üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:')
#     replyPostCommand.addParagraph('–ó–∞–≥–æ–ª–æ–≤–æ–∫:', strong=True).addText(dataAutogreeting['title'])
#     replyPostCommand.addParagraph('–°–æ–æ–±—â–µ–Ω–∏–µ:', strong=True).addText(dataAutogreeting['jsonModel'])

#     replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
#     replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))

# def autogreetingDisable(self, post, replyPostCommand, dataReplyPost):
#     with open('configs/autogreeting.json', 'r') as file:
#         dataAutogreeting = json.loads(file.read())
        
#     with open('configs/autogreeting.json', 'w') as file:
#         dataAutogreeting['status'] = False
#         dataAutogreeting = json.loads(file.read())
    
#     replyPostCommand.addText(post['user'], strong=True).addText(', –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω–æ. –Ø –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∏—Ö –ø–µ—Ä–≤–æ–º –¥–µ–π—Å—Ç–≤–∏–∏. –ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: ')
#     replyPostCommand.addText('autogreeting enable', strong=True).addText('.')

#     replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
#     replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))

# def autogreetingTitle(self, post, fullCommand, replyPostCommand, dataReplyPost):
#     newTitle = fullCommand[20:] # `autogreeting title: ` ‚Äì 20 —Å–∏–º–≤–æ–ª–æ–≤

#     with open('configs/autogreeting.json', 'r') as file:
#         dataAutogreeting = json.loads(file.read())
        
#     with open('configs/autogreeting.json', 'w') as file:
#         dataAutogreeting['title'] = newTitle
#         file.write(json.dumps(dataAutogreeting))
    
#     replyPostCommand.addText(post['user'], strong=True).addText(', –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω üéâ')
#     replyPostCommand.addParagraph('–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–∞–º–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π: ')
#     replyPostCommand.addText('autogreeting message: [–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ]', strong=True).addText('.')

#     replyPostCommand.addParagraph('üìå –í —Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:')
#     replyPostCommand.addBulletList('$USERNAME', strong=True).addText(' ‚Äî –∏–º—è –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞')
#     replyPostCommand.addListItem('$WIKINAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –≤–∏–∫–∏')
#     replyPostCommand.addListItem('$PAGENAME', strong=True).addText(' ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ —Ç–µ–º—ã, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫ –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–æ—è–≤–∏–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')

#     replyPostCommand.addParagraph('üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:')
#     replyPostCommand.addParagraph('–ó–∞–≥–æ–ª–æ–≤–æ–∫:', strong=True).addText(dataAutogreeting['title'])
#     replyPostCommand.addParagraph('–°–æ–æ–±—â–µ–Ω–∏–µ:', strong=True).addText(dataAutogreeting['jsonModel'])

#     replyPostCommand.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
#     replyPostCommand.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.myBot.getBotUserName()))



