import re
import json

from general import discbot
from general import activity
from general import moderation
from general import discmess
from autogreeting import AutogreetingHandler

from datetime import datetime
from typing import Optional

class CommandHandler:
    def __init__(self, bot: discbot.DiscussionsBot, activity: activity.DiscussionsActivity, moderation: moderation.DiscussionsModeration):
        self.bot = bot
        self.activity = activity
        self.moderation = moderation

        self.commands_map = {
            'ping': self._handle_ping,
            'pong': self._handle_ping,
            'autogreeting': self._handle_autogreeting,
            'report on': self._handle_report_enable,
            'report enable': self._handle_report_enable,
            'report off': self._handle_report_disable,
            'report disable': self._handle_report_disable,
            'warn add': self._handle_warn_add,
            'warn list': self._handle_warn_list,
            'warn delete': self._handle_warn_delete,
            'random': self._handle_random
        }
    
    def handle(self, message: discmess.DiscussionsMessage) -> bool:
        if not message['ping_bot']:
            return False
        
        with open('languages/{}.json'.format(self.bot._wikilang), 'r') as file:
            data_reply = json.load(file)
        
        reply = discmess.DiscussionsMessage()
        lower_command = message['full_command'].lower()

        for command, handler in self.commands_map.items():
            if lower_command.startswith(command):
                reply = handler(message, data_reply)
                break
        
        if not reply:
            return False
        
        match message['type']: # todo !!!!!
            case 'FORUM':
                return self.moderation.create_reply_discussion(reply, message['thread_id'])
            
            case 'WALL':
                return self.moderation.create_reply_message_wall(reply, message['thread_id'], user_id=message['user_id'])
            
            case 'ARTICLE_COMMENT':
                return self.moderation.create_reply_article_comment(reply, message['thread_id'], self.activity._get_page_title(message['forum_id']))
    
    def _handle_ping(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        reply = discmess.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', –ø—Ä–∏–≤–µ—Ç! –Ø, ').addText(self.bot._botname, strong=True)
        reply.addText(', ‚Äì –±–æ—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–π, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å –Ω—É–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ó—É–±–µ–Ω–∫–æ –ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤–∏—á. –ï—Å–ª–∏ —É —Ç–µ–±—è –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –ª—É—á—à–µ –æ–±—Ä–∞—â–∞–π—Å—è –∫ –Ω–µ–º—É. –î–µ—Ä–∂–∏ –¥–∞–∂–µ ')
        reply.addText('—Å—Å—ã–ª–∫—É', link='https://warriors-cats.fandom.com/ru/wiki/–°—Ç–µ–Ω–∞_–æ–±—Å—É–∂–¥–µ–Ω–∏—è:–ó—É–±–µ–Ω–∫–æ_–ú–∏—Ö–∞–∏–ª_–ü–µ—Ç—Ä–æ–≤–∏—á')
        reply.addText('. –ú–Ω–µ –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —Å–º—ã—Å–ª–∞ –ø–∏—Å–∞—Ç—å, —è –Ω–µ –æ–±–ª–∞–¥–∞—é –¥–∞–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç Chat GPT üèì')
        
        return reply
    
    def _handle_autogreeting(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        return self.autogreeting._handle_autogreeting(message, data_reply)

    def _handle_report_enable(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        pass

    def _handle_report_disable(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        pass

    def _handle_warn_add(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        pattern = r'warn add\s?@?(.+?)(?:\s?:\s?)(.+)'
        match = re.match(pattern, message['full_command'])

        if not match:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = match.group(1).replace('_', ' ')
        reason = match.group(2)

        with open('../configs/warns.json', 'r') as file:
            data_warns = json.loads(file)
        
        if not username in data_warns:
            if not self.activity.get_user_id(username):
                return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            data_warns[username] = []
        
        warn = {
            'moderator': message['user'],
            'reason': reason,
            'timestamp': datetime.strptime(message['timestamp'], '%d.%m.%Y %H:%M:%S')
        }

        reply = discmess.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
        reply.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.addParagraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
        reply.addBulletList()

        for warn in data_warns[username]:
            reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply
    
    def _handle_warn_list(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        pattern = r'warn list\s?@?(.+)'
        match = re.match(pattern, message['full_command'])

        if not match:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = match.group(1).replace('_', ' ')

        with open('../configs/warns.json', 'r') as file:
            data_warns = json.loads(file)
        
        if not username in data_warns:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        reply = discmess.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –≤—ã–¥–∞–Ω–Ω—ã—Ö —ç—Ç–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É ‚ö†Ô∏è')
        reply.addBulletList()

        for warn in data_warns[username]:
            reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply
    
    def _handle_warn_delete(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        pattern = r'warn delete\s?@?(.+?)(?:\s?:\s?)(.+)'
        match = re.match(pattern, message['full_command'])

        if not match:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        username = match.group(1).replace('_', ' ')
        list_to_remove = match.group(2)

        with open('../configs/warns.json', 'r') as file:
            data_warns = json.loads(file)
        
        if not username in data_warns:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        if 'all' in list_to_remove:
            data_warns[username] = []
        else:
            indexes_to_remove = [int(i) - 1 for i in re.findall(r'\d+', list_to_remove)]
            valid_indexes = [i for i in indexes_to_remove if 0 <= i < len(data_warns)]

            for i in sorted(valid_indexes, reverse=True):
                del data_warns[i]
        
        reply = discmess.DiscussionsMessage()
        reply.addText(message['user'], strong=True).addText(', –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚ö†Ô∏è')
        reply.addParagraph('–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ')
        reply.addText('warn delete @username: 1 2', strong=True).addText(' ‚Äî –≥–¥–µ —á–∏—Å–ª–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.')

        reply.addParagraph('üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ ' + username + ':')
        reply.addBulletList()

        for warn in data_warns[username]:
            reply.addListItem(data_warns[username]['timestamp'] + ' –æ—Ç ' + data_warns[username]['moderator'] + '. –ü—Ä–∏—á–∏–Ω–∞: ' + data_warns[username]['reason'])

        reply.addParagraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').addText('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.addText('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply
    
    def _handle_random(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        pass
