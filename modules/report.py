import json

from general import discbot
from general import activity
from general import moderation
from general import discmess

from typing import Optional

FILE_SETTINGS = 'configs/settings.json'
FILE_REPORT = 'configs/report.json'

class Report:
    def __init__(self, bot: discbot.DiscussionsBot, activity: activity.DiscussionsActivity, moderation: moderation.DiscussionsModeration):
        self.bot = bot
        self.activity = activity
        self.moderation = moderation
    
    def handle(self, message: discmess.DiscussionsMessage, data_forbidden_words: list) -> None:
        content = message['jsonModel'].lower() # –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ —Å—Ç–∞—Ç—å—è–º –ø–æ—á–µ–º—É-—Ç–æ –Ω–µ—Ç rawContent
        if any(word in content for word in data_forbidden_words):
            self._create_report(message)
    
    def _create_report(self, message: discmess.DiscussionsMessage) -> bool:
        match message['type']: # todo !!!!! –∫—Å—Ç–∞—Ç–∏, –Ω—É–∂–Ω–æ –µ—â–µ –ª–æ–≥–∏–∫—É –≤ activity –ø–æ—Ñ–∏–∫—Å–∏—Ç—å (c recent changes) 
            case 'FORUM':
                self.moderation.report_post_discussion(message['post_id'])
            
            case 'WALL':
                self.moderation.report_post_message_wall(message['post_id'])
            
            case 'ARTICLE_COMMENT':
                self.moderation.report_post_article_comments(message['post_id'], self.activity.get_page_title(message['forum_id']))

class ReportHandler:
    def __init__(self, bot: discbot.DiscussionsBot, activity: activity.DiscussionsActivity, moderation: moderation.DiscussionsModeration):
        self.bot = bot
        self.activity = activity
        self.moderation = moderation

        self.commands_map = {
            'on': self._handle_enable,
            'enable': self._handle_enable,
            'off': self._handle_disable,
            'disable': self._handle_disable
        }
    
    def _handle_report(self, message: discmess.DiscussionsMessage, data_reply: dict) -> Optional[discmess.DiscussionsMessage]:
        if not 'sysop' in message['permission']:
            return
        
        parts = message['full_command'].split(maxsplit=2)
        if len(parts) == 1:
            return # –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        
        subcommand = parts[1].lower()
        for command, handler in self.commands_map.items():
            if subcommand.startswith(command):
                return handler(message, data_reply)
    
    def _handle_enable(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        with open(FILE_SETTINGS, 'r') as file:
            data_report = json.loads(file.read())
        
        with open(FILE_SETTINGS, 'w') as file:
            data_report['status'] = True
            file.write(json.dumps(data_report))
        
        reply = discmess.DiscussionsMessage().add_paragraph()
        reply.add_text_to_last(message['user'], strong=True).add_text_to_last(', –æ—Ç—á–µ—Ç—ã –æ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤–∫–ª—é—á–µ–Ω—ã üëÅÔ∏è‚Äçüó®Ô∏è')
        reply.add_paragraph('–¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—É–¥—É—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞')
        reply.add_paragraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').add_text_to_last('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.add_text_to_last('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply

    def _handle_disable(self, message: discmess.DiscussionsMessage, data_reply: dict) -> discmess.DiscussionsMessage:
        with open(FILE_SETTINGS, 'r') as file:
            data_report = json.loads(file.read())
        
        with open(FILE_SETTINGS, 'w') as file:
            data_report['status'] = False
            file.write(json.dumps(data_report))
        
        reply = discmess.DiscussionsMessage().add_paragraph()
        reply.add_text_to_last(message['user'], strong=True).add_text_to_last(', —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã. –Ø –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç—ã –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–∞—Ä—É—à–∞—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö. –í—ã –º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å –∏—Ö –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –∫–æ–º–∞–Ω–¥–æ–π ')
        reply.add_text_to_last('report enable', strong=True).add_text_to_last('.')
        reply.add_paragraph('üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: ').add_text_to_last('–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞', link='https://discbot.fandom.com/ru/wiki/–ö–æ–º–∞–Ω–¥—ã_–±–æ—Ç–∞')
        reply.add_text_to_last('. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤ –Ω–∞—á–∞–ª–µ —É–ø–æ–º—è–Ω—É—Ç—å –º–æ–µ –∏–º—è {} —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!'.format(self.bot._botname))
        return reply
